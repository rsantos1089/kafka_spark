version: '3.8'

services:

  kafka:
    image: apache/kafka:4.0.0
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-spark-network

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./postgres/data:/data
    ports:
      - "5433:5432"
    networks:
      - kafka-spark-network

  spark-master:
    image: rsantos1089/spark:scala-2.13
    container_name: spark-master
    ports:
      - "8081:8080"
      - "7077:7077"
    volumes:
      - ./spark/logs:/opt/spark/spark-events
      - ./spark/scripts:/opt/bitnami/external_scripts
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - kafka-spark-network

  spark-worker:
    image: rsantos1089/spark:scala-2.13
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    volumes:
      - ./spark/logs:/opt/bitnami/spark/spark-events
      - ./spark/scripts:/opt/bitnami/external_scripts
    environment:
      - SPARK_MODE=worker
      - SPARK_MATER_URL=spark://spark-master:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - kafka-spark-network

networks:
  kafka-spark-network: